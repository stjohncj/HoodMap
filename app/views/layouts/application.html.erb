<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "Hood Map" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <%# Includes all stylesheet files in app/assets/stylesheets %>
    <%= stylesheet_link_tag :app, "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
    <%# <%=
      javascript_include_tag "https://maps.googleapis.com/maps/api/js?key=#{ENV['GOOGLE_MAPS_API_KEY']}&callback=initMap"
    %>
    <script>
  (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
    key: "<%= ENV['GOOGLE_MAPS_API_KEY'] %>",
    v: "weekly",
    // Use the 'v' parameter to indicate the version to use (weekly, beta, alpha, etc.).
    // Add other bootstrap parameters as needed, using camel case.
  });
</script>
    <%= javascript_include_tag "application", "data-turbo-track": "reload", type: "module" %>
  </head>

  <body>
    <%= yield %>
    
    <!-- Global Image Viewer Modal -->
    <div id="imageViewerModal" class="image-viewer-modal" onclick="closeImageViewer()">
      <span class="image-viewer-close" onclick="closeImageViewer()">&times;</span>
      <div class="image-viewer-content">
        <img id="imageViewerImage" class="image-viewer-image" alt="">
        <div id="imageViewerCaption" class="image-viewer-caption"></div>
      </div>
    </div>
    
    <style>
      /* Image viewer modal */
      .image-viewer-modal {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.9);
        cursor: zoom-out;
      }
      
      .image-viewer-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        max-width: 95%;
        max-height: 95%;
        cursor: zoom-in;
      }
      
      .image-viewer-image {
        width: 100%;
        height: auto;
        max-width: 100%;
        max-height: 95vh;
        object-fit: contain;
      }
      
      .image-viewer-close {
        position: absolute;
        top: 15px;
        right: 35px;
        color: white;
        font-size: 40px;
        font-weight: bold;
        cursor: pointer;
        z-index: 10000;
      }
      
      .image-viewer-close:hover {
        opacity: 0.7;
      }
      
      .image-viewer-caption {
        position: absolute;
        bottom: -60px;
        left: 50%;
        transform: translateX(-50%);
        color: white;
        font-family: 'Controwell Script', cursive;
        font-size: 1.6rem;
        text-align: center;
        white-space: nowrap;
        padding: 10px;
        background: rgba(0, 0, 0, 0.7);
        border-radius: 4px;
      }
    </style>
    
    <script>
      function openImageViewer(imageSrc, imageAlt) {
        const modal = document.getElementById('imageViewerModal');
        const modalImg = document.getElementById('imageViewerImage');
        const caption = document.getElementById('imageViewerCaption');

        modal.style.display = 'block';
        modalImg.src = imageSrc;
        modalImg.alt = imageAlt;
        caption.textContent = imageAlt;

        // Prevent body scroll when modal is open
        document.body.style.overflow = 'hidden';
      }

      function closeImageViewer() {
        const modal = document.getElementById('imageViewerModal');
        modal.style.display = 'none';

        // Restore body scroll
        document.body.style.overflow = 'auto';
      }

      // Close modal on Escape key
      document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && document.getElementById('imageViewerModal').style.display === 'block') {
          closeImageViewer();
        }
      });
    </script>
  </body>
</html>
